{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "prettier"
  ],

  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },

  "rules": {
    "no-await-in-loop": "warn",
    "no-eval": "error",
    "no-var": "error",
    "no-implied-eval": "error",
    "prefer-promise-reject-errors": "warn",
    "no-shadow": "off",
    "no-empty-function": "off",
    "no-unused-vars": "off",
    "no-use-before-define": "off",
    "no-console": "error",
    "arrow-body-style": "off",
    "no-duplicate-imports": "error",

    // typescript-eslint rules
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-use-before-define": ["off"],
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/prefer-optional-chain": "warn",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has"]
      },
      {
        "selector": "typeProperty",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has"]
      },
      {
        "selector": "parameter",
        "types": ["boolean"],
        "format": ["PascalCase"],
        "prefix": ["is", "should", "has"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"]
      }
    ],


    // react-hooks and react rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/react-in-jsx-scope": "off"
  }
}
